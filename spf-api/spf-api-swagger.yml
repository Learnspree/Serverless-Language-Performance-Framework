swagger: "2.0"
info:
  description: "This is definition for Serverless Performance API"
  version: "1.0.0"
  title: "Serverless Performance"
host: "serverlessperformance.net"
basePath: "/serverlessperformance/v1"
tags:
- name: "metrics"
  description: "Serverless Performance Metrics"
- name: "runtime-data"
  description: "Serverless Performance Data For Language Runtimes"
schemes:
- "https"
paths:
  /metrics:
    post:
      tags:
      - "metrics"
      summary: "Send function metrics data"
      description: "Sends metrics data to the serverless performance framework for storage"
      operationId: "sendFunctionMetricsData"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Function metrics data"
        required: true
        schema:
          $ref: "#/definitions/Metric"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Metric"      
        405:
          description: "Invalid input"
  /runtimes/{runtimeId}:  
    get:
      tags:
      - "runtime-data"
      summary: "Get summary data about a language runtime's performance"
      description: ""
      operationId: "runtimeSummary"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "runtimeId"
        in: "path"
        description: "Runtime Language Name"
        required: true
        type: "string"
      - name: "platform"
        in: "query"
        description: "Filter: The platform(s) to filter the query by - e.g. aws"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "aws"
          - "azure"
        collectionFormat: "multi"        
      - name: "state"
        in: "query"
        description: "Filter: The function state to filter the query by - either warm or cold"
        required: false
        type: "string" 
        enum:
          - "warm"
          - "cold"        
      - name: "memory"
        in: "query"
        description: "Filter: The function allocated memory to filter the query by - e.g. 128 (MB)"
        required: false
        type: "integer"
        format: "int32"
      - name: "type"
        in: "query"
        description: "Filter: The test function type to filter the query by - e.g. empty"
        required: false
        type: "string"
        enum:
          - "empty"
      - name: "startDate"
        in: "query"
        description: "Filter: The start date for the period to filter the query by"
        type: "string"
        format: "date-time"   
      - name: "endDate"
        in: "query"
        description: "Filter: The end date for the period to filter the query by"
        type: "string"
        format: "date-time"                                          
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MetricsSummary"    
        405:
          description: "Invalid input"
  /runtimes/{runtimeId}/maximum:  
    get:
      tags:
      - "runtime-data"
      summary: "Get details about the longest execution of a language runtime's function"
      description: ""
      operationId: "runtimeMaximum"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "runtimeId"
        in: "path"
        description: "Runtime Language Name"
        required: true
        type: "string"
      - name: "platform"
        in: "query"
        description: "Filter: The platform(s) to filter the query by - e.g. aws"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "aws"
          - "azure"
        collectionFormat: "multi"        
      - name: "state"
        in: "query"
        description: "Filter: The function state to filter the query by - either warm or cold"
        required: false
        type: "string" 
        enum:
          - "warm"
          - "cold"        
      - name: "memory"
        in: "query"
        description: "Filter: The function allocated memory to filter the query by - e.g. 128 (MB)"
        required: false
        type: "integer"
        format: "int32"
      - name: "type"
        in: "query"
        description: "Filter: The test function type to filter the query by - e.g. empty"
        required: false
        type: "string"
        enum:
          - "empty"        
      - name: "startDate"
        in: "query"
        description: "Filter: The start date for the period to filter the query by"
        type: "string"
        format: "date-time"   
      - name: "endDate"
        in: "query"
        description: "Filter: The end date for the period to filter the query by"
        type: "string"
        format: "date-time"                                  
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Metric"    
        405:
          description: "Invalid input"          
definitions:
  Metric:
    type: "object"
    properties:
      FunctionName:
        type: "string"
      FunctionVersion:
        type: "string"
      Timestamp:
        type: "string"
      Duration:
        type: "integer"
        format: "int32"
        description: "Function execution duration (ms)"          
      BilledDuration:
        type: "integer"
        format: "int32"
        description: "Function execution duration as billed (ms)"          
      MemorySize:
        type: "integer"
        format: "int32"
        description: "Memory that was allcoated to the function (MB)"     
      MemoryUsed:
          type: "integer"
          format: "int32"
          description: "Maximum memory that was used by the function (MB)"                          
      LanguageRuntime:
        type: "string"
      ServerlessPlatformName:
        type: "string"
  MetricsSummary:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      maximum:
        type: "integer"
        format: "int64"
        description: "Max length of time it took to initialize the function"
externalDocs:
  description: "Check out the Serverless Performance Framework on GitHub"
  url: "https://github.com/Learnspree/Serverless-Language-Performance-Framework"

